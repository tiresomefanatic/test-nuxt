import{_ as G,a as M}from"./Bg-D-7OM.js";import T from"./C2fntzSA.js";import{g as z,r as f,h as K,i as E,j as J,k,l as Q,m as W,o as c,c as l,d,w as h,n as p,H as X,b as g,p as x,q as N,t as Y,s as Z,a as ee}from"./C7abP_sL.js";import{u as te}from"./BzhZBeE0.js";import{u as ne}from"./BmaLfZEm.js";import{u as ae,q as _}from"./DfGzi4tv.js";import oe from"./D2BU5xkB.js";import"./B3X-7PZx.js";import"./C4MHy66V.js";import"./DAN6OZbT.js";import"./BJB7xORH.js";import"./Cl8KheoJ.js";import"./znXKvXbs.js";import"./Dym_awWQ.js";import"./BmlbPuZL.js";import"./CdaJyYWu.js";import"./DY7prswQ.js";import"./BliHHBQi.js";const se=window.setInterval,re={class:"page-wrapper"},ie={key:0},ce={key:0,class:"sidebar"},le={key:0,class:"content-header"},ue={key:0,class:"editor-container"},de={key:1,class:"prose-content"},me=z({__name:"[...slug]",async setup(he){let v,S;const{getRawContent:R,saveFileContent:q,isLoggedIn:y,currentBranch:s}=te(),{showToast:m}=ne(),A=f(!1),o=f(!1),w=f(""),F=f(null),b=K().params.slug||[],n=Array.isArray(b)?b.join("/"):b,P=E(()=>n!==""),B=E(()=>`${n}-${Date.now()}`),{data:C}=([v,S]=J(()=>ae(`content-${n}`,()=>n?_().where({_path:`/${n}`}).findOne():_().where({_path:"/"}).findOne(),{immediate:!0,server:!0})),v=await v,S(),v),u=E(()=>n?`content/${n}.md`:"content/index.md"),O=async()=>{var e;try{const t=await fetch(`https://api.github.com/repos/tiresomefanatic/test-nuxt/commits?path=${u.value}&sha=${s.value}`,{headers:{Accept:"application/vnd.github.v3+json"}});if(!t.ok)throw new Error("Failed to fetch commit info");const a=(e=(await t.json())[0])==null?void 0:e.sha;return a!==F.value?(console.log("New commit detected, refreshing content..."),F.value=a,!0):!1}catch(t){return console.error("Error checking content freshness:",t),!0}},i=async(e=!1)=>{var t;A.value=!0;try{if(e||await O()){console.log(`Fetching fresh content at ${new Date().toISOString()}`),console.log(`Branch: ${s.value}, Path: ${u.value}`);const a=await R("tiresomefanatic","test-nuxt",u.value,s.value);console.log("Raw content fetched:",{length:(a==null?void 0:a.length)||0,preview:a==null?void 0:a.substring(0,500)}),w.value=a;{const $=(t=Z().$content)==null?void 0:t.storage;console.log("Current content storage:",$),$&&(await $.clearAll(),console.log("Cleared content storage"));const I=await(n?_().where({_path:`/${n}`}):_().where({_path:"/"})).findOne();console.log("New content fetched:",I),C.value=I,console.log("Final data state:",{dataValue:C.value,path:n,contentPath:u.value})}console.log("Content loaded and refreshed successfully")}}catch(r){console.error("Content loading error:",r),console.error("Full error details:",{name:r.name,message:r.message,stack:r.stack}),m({title:"Error",message:`Failed to load content from branch: ${s.value}`,type:"error"})}finally{A.value=!1}},D=async()=>{document.visibilityState==="visible"&&!o.value&&await i()},V=async()=>{if(!y.value){m({title:"Authentication Required",message:"Please sign in with GitHub to edit content",type:"warning"});return}o.value=!0,await i(!0)},j=e=>{w.value=e},L=async e=>{if(!e||!y.value){m({title:"Error",message:"Please sign in to save changes",type:"error"});return}try{if(console.log(`Saving content to branch: ${s.value}`),await q("tiresomefanatic","test-nuxt",u.value,e,`Update ${u.value}`,s.value))m({title:"Success",message:`Content saved successfully to branch: ${s.value}`,type:"success"}),await i(!0),o.value=!1;else throw new Error(`Failed to save to branch: ${s.value}`)}catch(t){console.error("Error saving content:",t),m({title:"Error",message:`Failed to save to branch: ${s.value}`,type:"error"})}},H=e=>{m({title:"Editor Error",message:e.message,type:"error"})},U=async()=>{await i(!0),o.value=!1};return k(o,async(e,t)=>{e&&!t&&await i(!0)}),k(s,async(e,t)=>{e!==t&&(console.log(`Branch changed from ${t} to ${e}, reloading content...`),await i(!0))}),k(u,async(e,t)=>{e!==t&&await i(!0)}),Q(()=>{{i(!0),document.addEventListener("visibilitychange",D);const e=se(async()=>{o.value||await i()},3e4);W(()=>{clearInterval(e),document.removeEventListener("visibilitychange",D)})}}),(e,t)=>{const r=M,a=T;return c(),l("div",re,[d(r,null,{default:h(()=>[p(C)?(c(),l("div",ie,[d(X),g("div",{class:N(["content-area",{"editing-mode":o.value}])},[!o.value&&P.value?(c(),l("aside",ce,[d(oe)])):x("",!0),g("div",{class:N(["main-content",{"with-sidebar":!o.value&&P.value}])},[p(y)?(c(),l("div",le,[d(r,null,{default:h(()=>[o.value?(c(),l("button",{key:1,onClick:U,class:"edit-button"}," Exit ")):(c(),l("button",{key:0,onClick:V,class:"edit-button"}," Edit "))]),_:1})])):x("",!0),d(r,null,{default:h(()=>[o.value?(c(),l("div",ue,[d(G,{content:w.value,filePath:u.value,"onUpdate:content":j,onSave:L,onError:H},null,8,["content","filePath"])])):(c(),l("div",de,[(c(),l("div",{key:B.value},[d(a,{path:p(n),head:!1},{empty:h(()=>t[0]||(t[0]=[g("p",null,"No content found.",-1)])),"not-found":h(()=>[g("p",null,"Content not found. Path: "+Y(p(n)),1)]),_:1},8,["path"])]))]))]),_:1})],2)],2)])):x("",!0)]),_:1})])}}}),qe=ee(me,[["__scopeId","data-v-b04ab264"]]);export{qe as default};
